{"componentChunkName":"component---src-templates-blog-post-js","path":"/value of this in JavaScript/","result":{"data":{"site":{"siteMetadata":{"title":"Shivam Verma's Blogs"}},"markdownRemark":{"id":"45c59a02-ced5-58ba-b481-ff6b91670d94","excerpt":"“this” in JavaScript One question which confuses every developer in JavaScript.\nWhat is ? Well there cannot be one specific quoted definiton or answer for the…","html":"<h2>“this” in JavaScript</h2>\n<p>One question which confuses every developer in JavaScript.\nWhat is <code class=\"language-text\">this</code>?</p>\n<p>Well there cannot be one specific quoted definiton or answer for the above question because the value of <code class=\"language-text\">this</code> is not fixed in JavaScript code.\nIt has different value based on where it is used in the code.</p>\n<p>We will have a look at almost all the cases.</p>\n<ul>\n<li><code class=\"language-text\">this</code> in global scope</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The output of the above code will be the <code class=\"language-text\">window</code> object, because <code class=\"language-text\">this</code> in global scope points to the <strong>global object</strong> which is <code class=\"language-text\">window</code> in browser.</p>\n<ul>\n<li><code class=\"language-text\">this</code> inside a function in global scope</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In a function the value of  <code class=\"language-text\">this</code> is determined by how a function is called (runtime binding). It can’t be set by assignment during execution,\nES5 features like <code class=\"language-text\">call</code>, <code class=\"language-text\">bind</code> and <code class=\"language-text\">apply</code> can be used to set value of <code class=\"language-text\">this</code></p>\n<p>Inside a function, the value of this depends on how the function is called.</p>\n<p>Since the above code is not in strict mode, and because the value of <code class=\"language-text\">this</code> is not set by the <code class=\"language-text\">call</code>, <code class=\"language-text\">this</code> will default to the global object, which is <code class=\"language-text\">window</code> in a browser.</p>\n<p>However in strict mode if the value of <code class=\"language-text\">this</code> is not set, it remains as <code class=\"language-text\">undefined</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see strict mode</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">this</code> inside a method of an object</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">:</span> <span class=\"token string\">\"objName\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">methodObj</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">methodObj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>One simple rule to know what a <code class=\"language-text\">this</code> is referring when called with object as a object method</p>\n<p>The value of <code class=\"language-text\">this</code> is the object “before dot”, the one used to call the method.</p>\n<ul>\n<li><code class=\"language-text\">this</code> inside a function which is inside a method of an object.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"objName1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">methodObj1</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">nestedFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">nestedFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nobj1<span class=\"token punctuation\">.</span><span class=\"token function\">methodObj1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The output of the above code will again be global object <code class=\"language-text\">window</code>,why?\nbecause we call object method with the object so the value of <code class=\"language-text\">this</code> of object method is set, but the value of <code class=\"language-text\">this</code> for the nested function is not set so in that case it points to the <strong>global object</strong>.</p>\n<p>This is a problem, to solve this problem we have got two solutions</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"objName2\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">methodObj2</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// the value of this is correct till this point</span>\n        <span class=\"token keyword\">var</span> that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">nestedFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>that<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">nestedFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nobj2<span class=\"token punctuation\">.</span><span class=\"token function\">methodObj2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This solution can be considered as old school. This solution works by storing the correct value of <code class=\"language-text\">this</code> in a local function variable and using it inside the nested function</p>\n<p>Another solution is using ES6 arrow functions inside the method of an object</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> obj3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"objName3\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">objMethod3</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">nestedFunc</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">nestedFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nobj3<span class=\"token punctuation\">.</span><span class=\"token function\">objMethod3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This solution works perfectly. Again why?</p>\n<p>It’s because ES6 arrow function have no value of <code class=\"language-text\">this</code> of their own. They take value of <code class=\"language-text\">this</code> from their outer lexical scope. In simple words the value of <code class=\"language-text\">this</code> for it’s parent is copied by the arrow funtion.</p>\n<p>But for this solution to work the outer function should be a “normal” function. If we make the outer function which is the object methoad also as a arrow function then the value of <code class=\"language-text\">this</code> will be set to <code class=\"language-text\">window</code> as the method will take the value from the outer context which is the object which lies in global context so again it will be <code class=\"language-text\">window</code>.</p>\n<p>Phew… this was the story of <code class=\"language-text\">this</code>, which is not over yet 😅 we have not discussed Classes yet.</p>\n<p>Well that deserves a separate blog post. </p>\n<p>Will discuss in coming blog…</p>","frontmatter":{"title":"Understanding \"this\"","date":"December 13, 2020","description":"This blog will explain about different values of \"this\" keyword depending on where it is used in JavaScript code."}},"previous":null,"next":{"fields":{"slug":"/Execution Context/"},"frontmatter":{"title":"Execution Context in JS"}}},"pageContext":{"id":"45c59a02-ced5-58ba-b481-ff6b91670d94","previousPostId":null,"nextPostId":"2a804186-d351-53b5-aae6-0ae0a91318f5"}},"staticQueryHashes":["2841359383","916993862"]}